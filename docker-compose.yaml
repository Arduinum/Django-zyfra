version: "2.18.1"

services:
  backend:
    build:
      context: .
    env_file:
      - .env
    ports:
      - 8090:8090
    volumes:
      - data_zyfra_blog:/data
    command: bash -c "
      ./wait-for-postgres.sh db ${NAME} ${USER_DB}
      && python manage.py migrate
      && python manage.py loaddata zyfra-blog.json
      && python manage.py runserver 0.0.0.0:8090"
    depends_on:
      - db
  db:
    image: postgres:13.11
    restart: always
    env_file:
      - .env
    ports:
      # внешний/внутрений
      - 5480:5432
    environment:
      - POSTGRES_USER=${USER_DB}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${NAME}
    volumes:
      - postgres_zyfra:/var/lib/postgresql/data
  redis:
    image: redis:latest
    hostname: redis
  worker_red:
    build: .
    hostname: worker_red
    depends_on:
      - redis
      - db
    command: "celery -A siteblog worker -l DEBUG"
    links:
      - redis
    volumes:
      - redis_data:/redis_data
    environment:
      - DB_HOST=db
      - DB_NAME=${NAME}
      - DB_USER=${USER}
      - DB_PASS=${PASSWORD}
    env_file:
      - .env
  celery-beat:
    build:
      context: .
    command: "celery -A siteblog beat -l INFO"
    volumes:
      - redis_data:/redis_data
    environment:
      - DB_HOST=db
      - DB_NAME=${NAME}
      - DB_USER=${USER}
      - DB_PASS=${PASSWORD}
    links:
      - redis
    depends_on:
      - redis
      - worker_red
    env_file:
      - .env
volumes:
  data_zyfra_blog:
  postgres_zyfra:
  redis_data: